Digital Music Store Data Analysis Done by Ansh Chawla DBE,DU
Q: Who is the senior most employee based on job title?
select * from employee
order by levels desc
limit 1;

Q: Which 5 countries have the most Invoices?
select billing_country, count(*) as number 
from invoice
group by billing_country
order by number desc
limit 5;


Q: What are top 3 values of total invoice?
select total from invoice 
order by total desc
limit 3 

Q: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals
select billing_city, sum(total)
from invoice
group by billing_city
order by sum(total) desc
limit 1

Q: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.
select i.customer_id, concat(c.first_name, c.last_name) as name, sum(i.total)
from customer as c join invoice as i on c.customer_id = i.customer_id
group by i.customer_id, name
order by sum(i.total) desc
limit 1;

Q: Write query to return the email, first name, last name, of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A.
select distinct c.email, c.first_name, c.last_name from customer as c join 
invoice as i on c.customer_id = i.customer_id join 
invoice_line as il on i.invoice_id = il.invoice_id join 
track as t on il.track_id = t.track_id join 
genre as g on t.genre_id = g.genre_id
where g.name like 'Rock'
order by c.email;

Q: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands.
SELECT artist.artist_id, artist.name,COUNT(artist.artist_id) AS number_of_songs
FROM track
JOIN album ON album.album_id = track.album_id
JOIN artist ON artist.artist_id = album.artist_id
JOIN genre ON genre.genre_id = track.genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY artist.artist_id
ORDER BY number_of_songs DESC
LIMIT 10;


Q: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first.
SELECT name,miliseconds
FROM track
WHERE miliseconds > (
	SELECT AVG(miliseconds) AS avg_track_length
	FROM track )
ORDER BY miliseconds DESC;
